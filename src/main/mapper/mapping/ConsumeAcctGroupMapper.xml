<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.base.crm.ad.dao.ConsumeAcctGroupMapper">
	<resultMap id="BaseResultMap" type="com.base.crm.ad.entity.ConsumeAcctGroup">
		<id column="id" jdbcType="INTEGER" property="id" />
		<result column="acct_id" jdbcType="INTEGER" property="acctId" />
		<result column="group_name" jdbcType="VARCHAR" property="groupName" />
		<result column="status" jdbcType="INTEGER" property="status" />
		<result column="start_date" jdbcType="VARCHAR" property="startDate" />
		<result column="end_date" jdbcType="VARCHAR" property="endDate" />
		<result column="created_datetime" jdbcType="DATE" property="createdDatetime" />
	</resultMap>
	
	<sql id="Base_Column_List">
		id, acct_id, group_name, status, start_date, end_date, created_datetime
	</sql>

	<sql id="dynamicWhere">
		<where>
			<if test="id != null">id=#{id}</if>
			<if test="status != null and status.length>0">status=#{status}</if>
		</where>
	</sql>
	
	<select id="selectConsumeAcctGroupReportPage" parameterType="com.base.crm.report.entity.ConsumeAcctGroupReport"
		resultType="com.base.crm.report.entity.ConsumeAcctGroupReport">
		select * from ad_group_consume_view g
		<if test="pageTools != null and pageTools.limitRows !=null ">
			inner join (
				select ad.consume_date from consume_acct_group cg
				inner join ad_consume ad on ad.ad_acct_id=cg.acct_id
				group by ad.consume_date
				order by ad.consume_date desc
				limit 0,#{pageTools.limitRows}
			) t on t.consume_date = g.consumeDate
		</if> 
		where 1=1
		<if test="status != null and status.length>0">
			and g.status = #{status}
		</if> 
		order by g.status desc,g.consumeDate desc
		
		<if test="pageTools != null">
			limit #{pageTools.rowIndex},#{pageTools.pageSize}
		</if>
	</select>
	
	<select id="selectConsumeAcctGroupReportPageTotalCount" parameterType="com.base.crm.report.entity.ConsumeAcctGroupReport"
		resultType="Long">
		select count(1) from ad_group_consume_view g
		<if test="status != null and status.length>0">
			where g.status = #{status}
		</if> 
	</select>
	
	<select id="selectConsumeAcctGroupReportPageMonth" parameterType="com.base.crm.report.entity.ConsumeAcctGroupReport"
		resultType="com.base.crm.report.entity.ConsumeAcctGroupReport">
		select 
			id, 
			groupName, 
			status,
			sum(consumeAmount) consumeAmount, 
			sum(realAmount) realAmount, 
			avg(rebate) rebate,  
			consumeMonth, 
			sum(fansNum) fansNum,
			ifnull(sum(realAmount)/sum(fansNum),0) price
		
		from ad_group_consume_view v
		where 1=1
		<if test="status != null and status.length>0">
			and v.status = #{status}
		</if>
		<if test="consumeMonth != null and consumeMonth.length>0">
			and consumeMonth = #{consumeMonth}
		</if>
			
		group by id, groupName, status, consumeMonth 
		order by v.status desc, consumeMonth desc
		
		<if test="pageTools != null">
			limit #{pageTools.rowIndex},#{pageTools.pageSize}
		</if>
	</select>
	
	<select id="selectConsumeAcctGroupReportPageTotalCountMonth" parameterType="com.base.crm.report.entity.ConsumeAcctGroupReport"
		resultType="Long">
		select count(1) from (
			select 
				count(1)
			from ad_group_consume_view v
			where 1=1
			<if test="status != null and status.length>0">
				and v.status = #{status}
			</if>
			<if test="consumeMonth != null and consumeMonth.length>0">
				and consumeMonth = #{consumeMonth}
			</if>
				
			group by id, groupName, status, consumeMonth 
		) t
	</select>
	
	<select id="selectPageByObjectForList" parameterType="com.base.crm.ad.entity.ConsumeAcctGroup"
		resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from consume_acct_group
		<include refid="dynamicWhere" />
		order by status desc,created_datetime desc
		<if test="pageTools != null">
			limit #{pageTools.rowIndex},#{pageTools.pageSize}
		</if>
	</select>
	
	<select id="selectPageTotalCount" parameterType="com.base.crm.ad.entity.ConsumeAcctGroup"
		resultType="Long">
		select
			count(1)
		from consume_acct_group
		<include refid="dynamicWhere" />
	</select>
	
	<select id="selectByPrimaryKey" parameterType="java.lang.Long"
		resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from consume_acct_group
		where id = #{id}
	</select>
	
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
		delete from consume_acct_group
		where id = #{id}
	</delete>
	
	<insert id="insertSelective" parameterType="com.base.crm.ad.entity.ConsumeAcctGroup">
		insert into consume_acct_group
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				id,
			</if>
			<if test="acctId != null">
				acct_id,
			</if>
			<if test="groupName != null">
				group_name,
			</if>
			<if test="status != null">
				status,
			</if>
			<if test="startDate != null">
				start_date,
			</if>
			<if test="endDate != null">
				end_date,
			</if>
			<if test="createdDatetime != null">
				created_datetime,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id},
			</if>
			<if test="acctId != null">
				#{acctId},
			</if>
			<if test="groupName != null">
				#{groupName,jdbcType=VARCHAR},
			</if>
			<if test="status != null">
				#{status},
			</if>
			<if test="startDate != null">
				#{startDate,jdbcType=VARCHAR},
			</if>
			<if test="endDate != null">
				#{endDate,jdbcType=VARCHAR},
			</if>
			<if test="createdDatetime != null">
				#{createdDatetime,jdbcType=DATE},
			</if>
		</trim>
	</insert>
	
	<update id="updateByPrimaryKeySelective" parameterType="com.base.crm.ad.entity.ConsumeAcctGroup">
		update consume_acct_group
		<set>
			<if test="acctId != null">
				acct_id = #{acctId},
			</if>
			<if test="groupName != null">
				group_name = #{groupName,jdbcType=VARCHAR},
			</if>
			<if test="status != null">
				status = #{status},
			</if>
			<if test="startDate != null">
				start_date = #{startDate,jdbcType=VARCHAR},
			</if>
			<if test="endDate != null">
				end_date = #{endDate,jdbcType=VARCHAR},
			</if>
			<if test="createdDatetime != null">
				created_datetime = #{createdDatetime,jdbcType=DATE},
			</if>
		</set>
		where id = #{id}
	</update>

</mapper>
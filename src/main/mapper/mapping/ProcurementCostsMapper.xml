<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.base.crm.procurement.dao.ProcurementCostsMapper">
	<resultMap id="BaseResultMap" type="com.base.crm.procurement.entity.ProcurementCosts">
		<id column="id" jdbcType="INTEGER" property="id" />
		<result column="product_name" jdbcType="VARCHAR" property="productName" />
		<result column="depository_id" jdbcType="VARCHAR" property="depositoryId" />
		<result column="product_id" jdbcType="VARCHAR" property="productId" />
		<result column="unit" jdbcType="VARCHAR" property="unit" />
		<result column="status" jdbcType="VARCHAR" property="status" />
		<result column="num" jdbcType="INTEGER" property="num" />
		<result column="amount" jdbcType="VARCHAR" property="amount" />
		<result column="created_date" jdbcType="VARCHAR" property="createdDate" />
	</resultMap>
	
	<sql id="Base_Column_List">
		id, product_name, num, amount, created_date,depository_id,product_id,unit,status
	</sql>
	<sql id="dynamicWhere">
		<where>
			<if test="id != null">id=#{id}</if>
			<if test="depositoryId != null">depository_id=#{depositoryId}</if>
			<if test="productId != null">product_id=#{productId}</if>
			<if test="productName != null and productName.length()>0">and product_name=#{productName}</if>
			<if test="createdDate != null and createdDate.length()>0">and created_date=#{createdDate}</if>
			<if test="startDate != null and startDate.length()>0">and created_date>=#{startDate}</if>
			<if test="endDate != null and endDate.length()>0">and created_date <![CDATA[<=]]>#{endDate}</if>
		</where>
	</sql>
	
	<select id="selectByPrimaryKey" parameterType="java.lang.Long"
		resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from procurement_costs
		where id = #{id,jdbcType=INTEGER}
	</select>
	
	<select id="queryMonthBy" parameterType="Map"
		resultType="String">
		select * from 
		(
			select substr(consume_date,1,6) month from ad_consume
			group by substr(consume_date,1,6)
			union
			select substr(created_date,1,6) month from procurement_costs
			group by substr(created_date,1,6)
			union
			select substr(order_date,1,6) month from cust_orders
			group by substr(order_date,1,6)
		) t
		where 1=1
		<if test="month != null and month.length()>0">
			and month = #{month}
		</if>
		order by month desc
	</select>

	<select id="querySumAmountByMonth" parameterType="String"
		resultType="BigDecimal">
		select
		sum(amount) amount
		from procurement_costs
		where substr(created_date,1,6) = #{month} 
	</select>
	
	<select id="selectBySelective" parameterType="com.base.crm.procurement.entity.ProcurementCosts"
		resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from procurement_costs
		<include refid="dynamicWhere" />
	</select>
	
	<select id="selectPageByObjectForList" parameterType="com.base.crm.procurement.entity.ProcurementCosts"
		resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from procurement_costs
		<include refid="dynamicWhere" />
		order by id desc
		limit #{pageTools.rowIndex},#{pageTools.pageSize}
	</select>
	
	<select id="selectPageTotalCount" parameterType="com.base.crm.procurement.entity.ProcurementCosts"
		resultType="Long">
		select
			count(1)
		from procurement_costs
		<include refid="dynamicWhere" />
	</select>

	<delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
		delete from procurement_costs
		where id = #{id,jdbcType=INTEGER}
	</delete>

	<insert id="insertSelective" parameterType="com.base.crm.procurement.entity.ProcurementCosts">
		insert into procurement_costs
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				id,
			</if>
			<if test="productName != null">
				product_name,
			</if>
			<if test="num != null">
				num,
			</if>
			<if test="amount != null">
				amount,
			</if>
			<if test="createdDate != null">
				created_date,
			</if>
			<if test="depositoryId != null">
				depository_id,
			</if>
			<if test="productId != null">
				product_id,
			</if>
			<if test="unit != null">
				unit,
			</if>
			<if test="status != null">
				status,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=INTEGER},
			</if>
			<if test="productName != null">
				#{productName,jdbcType=VARCHAR},
			</if>
			<if test="num != null">
				#{num,jdbcType=INTEGER},
			</if>
			<if test="amount != null">
				#{amount,jdbcType=VARCHAR},
			</if>
			<if test="createdDate != null">
				#{createdDate,jdbcType=VARCHAR},
			</if>
			<if test="depositoryId != null">
				#{depositoryId},
			</if>
			<if test="productId != null">
				#{productId},
			</if>
			<if test="unit != null">
				#{unit},
			</if>
			<if test="status != null">
				#{status},
			</if>
		</trim>
	</insert>

	<update id="updateByPrimaryKeySelective" parameterType="com.base.crm.procurement.entity.ProcurementCosts">
		update procurement_costs
		<set>
			<if test="productName != null">
				product_name = #{productName,jdbcType=VARCHAR},
			</if>
			<if test="num != null">
				num = #{num,jdbcType=INTEGER},
			</if>
			<if test="amount != null">
				amount = #{amount,jdbcType=VARCHAR},
			</if>
			<if test="createdDate != null">
				created_date = #{createdDate,jdbcType=VARCHAR},
			</if>
			<if test="depositoryId != null">
				depository_id = #{depositoryId},
			</if>
			<if test="productId != null">
				product_id = #{productId},
			</if>
			<if test="unit != null">
				unit = #{unit},
			</if>
			<if test="status != null">
				status = #{status},
			</if>
		</set>
		where id = #{id,jdbcType=INTEGER}
	</update>

</mapper>